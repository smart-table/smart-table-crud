{"version":3,"file":"index.js","sources":["../../node_modules/zora/dist/zora.es.js","../../node_modules/smart-table-operators/index.js","../../crud.js","../../index.js","../index.js"],"sourcesContent":["/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nvar index = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1);\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar keys = createCommonjsModule(function (module, exports) {\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n});\n\nvar is_arguments = createCommonjsModule(function (module, exports) {\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n}\n});\n\nvar index$1 = createCommonjsModule(function (module) {\nvar pSlice = Array.prototype.slice;\nvar objectKeys = keys;\nvar isArguments = is_arguments;\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n});\n\nconst assertions = {\n  ok(val, message = 'should be truthy') {\n    const assertionResult = {\n      pass: Boolean(val),\n      expected: 'truthy',\n      actual: val,\n      operator: 'ok',\n      message\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  deepEqual(actual, expected, message = 'should be equivalent') {\n    const assertionResult = {\n      pass: index$1(actual, expected),\n      actual,\n      expected,\n      message,\n      operator: 'deepEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  equal(actual, expected, message = 'should be equal') {\n    const assertionResult = {\n      pass: actual === expected,\n      actual,\n      expected,\n      message,\n      operator: 'equal'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notOk(val, message = 'should not be truthy') {\n    const assertionResult = {\n      pass: !Boolean(val),\n      expected: 'falsy',\n      actual: val,\n      operator: 'notOk',\n      message\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notDeepEqual(actual, expected, message = 'should not be equivalent') {\n    const assertionResult = {\n      pass: !index$1(actual, expected),\n      actual,\n      expected,\n      message,\n      operator: 'notDeepEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notEqual(actual, expected, message = 'should not be equal') {\n    const assertionResult = {\n      pass: actual !== expected,\n      actual,\n      expected,\n      message,\n      operator: 'notEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  throws(func, expected, message) {\n    let caught, pass, actual;\n    if (typeof expected === 'string') {\n      [expected, message] = [message, expected];\n    }\n    try {\n      func();\n    } catch (error) {\n      caught = {error};\n    }\n    pass = caught !== undefined;\n    actual = caught && caught.error;\n    if (expected instanceof RegExp) {\n      pass = expected.test(actual) || expected.test(actual && actual.message);\n      expected = String(expected);\n    } else if (typeof expected === 'function' && caught) {\n      pass = actual instanceof expected;\n      actual = actual.constructor;\n    }\n    const assertionResult = {\n      pass,\n      expected,\n      actual,\n      operator: 'throws',\n      message: message || 'should throw'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  doesNotThrow(func, expected, message) {\n    let caught;\n    if (typeof expected === 'string') {\n      [expected, message] = [message, expected];\n    }\n    try {\n      func();\n    } catch (error) {\n      caught = {error};\n    }\n    const assertionResult = {\n      pass: caught === undefined,\n      expected: 'no thrown error',\n      actual: caught && caught.error,\n      operator: 'doesNotThrow',\n      message: message || 'should not throw'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  fail(reason = 'fail called') {\n    const assertionResult = {\n      pass: false,\n      actual: 'fail called',\n      expected: 'fail not called',\n      message: reason,\n      operator: 'fail'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  }\n};\n\nfunction assertion (test) {\n  return Object.create(assertions, {test: {value: test}});\n}\n\nconst Test = {\n  run: function () {\n    const assert = assertion(this);\n    const now = Date.now();\n    return index(this.coroutine(assert))\n      .then(() => {\n        return {assertions: this.assertions, executionTime: Date.now() - now};\n      });\n  },\n  addAssertion(){\n    const newAssertions = [...arguments].map(a => Object.assign({description: this.description}, a));\n    this.assertions.push(...newAssertions);\n    return this;\n  }\n};\n\nfunction test ({description, coroutine, only = false}) {\n  return Object.create(Test, {\n    description: {value: description},\n    coroutine: {value: coroutine},\n    assertions: {value: []},\n    only: {value: only},\n    length: {\n      get(){\n        return this.assertions.length\n      }\n    }\n  });\n}\n\nfunction tapOut ({pass, message, index}) {\n  const status = pass === true ? 'ok' : 'not ok';\n  console.log([status, index, message].join(' '));\n}\n\nfunction canExit () {\n  return typeof process !== 'undefined' && typeof process.exit === 'function';\n}\n\nfunction tap () {\n  return function * () {\n    let index = 1;\n    let lastId = 0;\n    let success = 0;\n    let failure = 0;\n\n    const starTime = Date.now();\n    console.log('TAP version 13');\n    try {\n      while (true) {\n        const assertion = yield;\n        if (assertion.pass === true) {\n          success++;\n        } else {\n          failure++;\n        }\n        assertion.index = index;\n        if (assertion.id !== lastId) {\n          console.log(`# ${assertion.description} - ${assertion.executionTime}ms`);\n          lastId = assertion.id;\n        }\n        tapOut(assertion);\n        if (assertion.pass !== true) {\n          console.log(`  ---\n  operator: ${assertion.operator}\n  expected: ${JSON.stringify(assertion.expected)}\n  actual: ${JSON.stringify(assertion.actual)}\n  ...`);\n        }\n        index++;\n      }\n    } catch (e) {\n      console.log('Bail out! unhandled exception');\n      console.log(e);\n      if (canExit()) {\n        process.exit(1);\n      }\n    }\n    finally {\n      const execution = Date.now() - starTime;\n      if (index > 1) {\n        console.log(`\n1..${index - 1}\n# duration ${execution}ms\n# success ${success}\n# failure ${failure}`);\n      }\n      if (failure && canExit()) {\n        process.exit(1);\n      }\n    }\n  };\n}\n\nconst Plan = {\n  test(description, coroutine, opts = {}){\n    const testItems = (!coroutine && description.tests) ? [...description] : [{description, coroutine}];\n    this.tests.push(...testItems.map(t=>test(Object.assign(t, opts))));\n    return this;\n  },\n\n  only(description, coroutine){\n    return this.test(description, coroutine, {only: true});\n  },\n\n  run(sink = tap()){\n    const sinkIterator = sink();\n    sinkIterator.next();\n    const hasOnly = this.tests.some(t=>t.only);\n    const runnable = hasOnly ? this.tests.filter(t=>t.only) : this.tests;\n    return index(function * () {\n      let id = 1;\n      try {\n        const results = runnable.map(t=>t.run());\n        for (let r of results) {\n          const {assertions, executionTime} = yield r;\n          for (let assert of assertions) {\n            sinkIterator.next(Object.assign(assert, {id, executionTime}));\n          }\n          id++;\n        }\n      }\n      catch (e) {\n        sinkIterator.throw(e);\n      } finally {\n        sinkIterator.return();\n      }\n    }.bind(this))\n  },\n\n  * [Symbol.iterator](){\n    for (let t of this.tests) {\n      yield t;\n    }\n  }\n};\n\nfunction plan () {\n  return Object.create(Plan, {\n    tests: {value: []},\n    length: {\n      get(){\n        return this.tests.length\n      }\n    }\n  });\n}\n\nexport default plan;\n","export function swap (f) {\n  return (a, b) => f(b, a);\n}\n\nexport function compose (first, ...fns) {\n  return (...args) => fns.reduce((previous, current) => current(previous), first(...args));\n}\n\nexport function curry (fn, arityLeft) {\n  const arity = arityLeft || fn.length;\n  return (...args) => {\n    if (arity === args.length) {\n      return fn(...args);\n    } else {\n      const func = (...moreArgs) => fn(...args, ...moreArgs);\n      return curry(func, arity - args.length);\n    }\n  };\n}\n\nexport function apply (fn) {\n  return (...args) => fn(...args);\n}\n\nexport function tap (fn) {\n  return arg => {\n    fn(arg);\n    return arg;\n  }\n}","import {curry} from 'smart-table-operators';\n\nexport const get = curry((array, index) => array[index]);\nexport const replace = curry((array, newVal, index) => array.map((val, i) => (index === i ) ? newVal : val));\nexport const patch = curry((array, newVal, index) => replace(array, Object.assign(array[index], newVal), index));\nexport const remove = curry((array, index) => array.filter((val, i) => index !== i));\nexport const insert = curry((array, newVal, index) => [...array.slice(0, index), newVal, ...array.slice(index)]);","import {compose} from 'smart-table-operators';\nimport {get, replace, patch, remove, insert} from './crud';\n\nexport default function ({data, table}) {\n  const mutateData = (newData) => {\n    data.splice(0, data.length);\n    data.push(...newData);\n  };\n  const refresh = compose(mutateData, table.exec);\n\n  return {\n    update(index, newVal){\n      const exec = compose(\n        replace(data, newVal),\n        refresh\n      );\n      return exec(index);\n    },\n    patch(index, newVal){\n      const exec = compose(\n        patch(data, newVal),\n        refresh);\n      return exec(index);\n    },\n    remove: compose(remove(data), refresh),\n    insert(newVal, index = 0){\n      const exec = compose(insert(data, newVal), refresh);\n      return exec(index);\n    },\n    get: get(data)\n  };\n}","import zora from 'zora';\nimport crud from '../index';\n\nfunction getData () {\n  return [\n    {name: 'bob', lastName: 'leponge', age: 129},\n    {name: 'foo', lastName: 'bar', age: 39},\n    {name: 'raymond', lastName: 'deubaze', age: 25},\n    {name: 'blah', lastName: 'woot', age: 69}\n  ];\n}\n\nfunction mockTable () {\n\n  let dispatchCall = [];\n  let execCall = 0;\n\n  return {\n    dispatch(event, value){\n      dispatchCall.push({event, value});\n    },\n    exec(){\n      execCall++;\n    },\n    getDispatchCalls(){\n      return dispatchCall;\n    },\n    getExecCalls(){\n      return execCall;\n    }\n  };\n}\n\nexport default zora()\n  .test('update(full replacement) using the index', function * (t) {\n    const data = getData();\n    const table = mockTable();\n    const crudTable = crud({data, table});\n    crudTable.update(1, {name: 'edited'});\n    t.equal(table.getExecCalls(), 1);\n    // t.deepEqual(table.getDispatchCalls(), [{\n    //   event: 'ROW_UPDATED',\n    //   value: {index: 1, value: {name: 'edited'}}\n    // }]);\n    t.deepEqual(data, [\n      {name: 'bob', lastName: 'leponge', age: 129},\n      {name: 'edited'},\n      {name: 'raymond', lastName: 'deubaze', age: 25},\n      {name: 'blah', lastName: 'woot', age: 69}\n    ]);\n  })\n  // .test('update(full replacement) using the item reference', function * (t) {\n  //   const data = getData();\n  //   const table = mockTable();\n  //   const crudTable = crud({data, table});\n  //   crudTable.update(data[1], {name: 'edited'});\n  //   t.equal(table.getExecCalls(), 1);\n  //   // t.deepEqual(table.getDispatchCalls(), [{\n  //   //   event: 'ROW_UPDATED',\n  //   //   value: {index: 1, value: {name: 'edited'}}\n  //   // }]);\n  //   t.deepEqual(data, [\n  //     {name: 'bob', lastName: 'leponge', age: 129},\n  //     {name: 'edited'},\n  //     {name: 'raymond', lastName: 'deubaze', age: 25},\n  //     {name: 'blah', lastName: 'woot', age: 69}\n  //   ]);\n  // })\n  .test('patch(partial update) using the index', function * (t) {\n    const data = getData();\n    const table = mockTable();\n    const crudTable = crud({data, table});\n    crudTable.patch(1, {name: 'edited', age: 66});\n    t.equal(table.getExecCalls(), 1);\n    // t.deepEqual(table.getDispatchCalls(), [{\n    //   event: 'ROW_PATCHED',\n    //   value: {index: 1, value: {name: 'edited', lastName: 'bar', age: 66}}\n    // }]);\n    t.deepEqual(data, [\n      {name: 'bob', lastName: 'leponge', age: 129},\n      {name: 'edited', lastName: 'bar', age: 66},\n      {name: 'raymond', lastName: 'deubaze', age: 25},\n      {name: 'blah', lastName: 'woot', age: 69}\n    ]);\n  })\n  // .test('patch(partial update) using the item reference', function * (t) {\n  //   const data = getData();\n  //   const table = mockTable();\n  //   const crudTable = crud({data, table});\n  //   crudTable.patch(data[1], {name: 'edited', age: 66});\n  //   t.equal(table.getExecCalls(), 1);\n  //   // t.deepEqual(table.getDispatchCalls(), [{\n  //   //   event: 'ROW_PATCHED',\n  //   //   value: {index: 1, value: {name: 'edited', lastName: 'bar', age: 66}}\n  //   // }]);\n  //   t.deepEqual(data, [\n  //     {name: 'bob', lastName: 'leponge', age: 129},\n  //     {name: 'edited', lastName: 'bar', age: 66},\n  //     {name: 'raymond', lastName: 'deubaze', age: 25},\n  //     {name: 'blah', lastName: 'woot', age: 69}\n  //   ]);\n  // })\n  .test('remove using the index', function * (t) {\n    const data = getData();\n    const table = mockTable();\n    const crudTable = crud({data, table});\n    crudTable.remove(1);\n    t.equal(table.getExecCalls(), 1);\n    // t.deepEqual(table.getDispatchCalls(), [{\n    //   event: 'ROW_REMOVED',\n    //   value: {index: 1, value: {name: 'foo', lastName: 'bar', age: 39}}\n    // }]);\n    t.deepEqual(data, [\n      {name: 'bob', lastName: 'leponge', age: 129},\n      {name: 'raymond', lastName: 'deubaze', age: 25},\n      {name: 'blah', lastName: 'woot', age: 69}\n    ]);\n  })\n  // .test('remove using the reference', function * (t) {\n  //   const data = getData();\n  //   const table = mockTable();\n  //   const crudTable = crud({data, table});\n  //   crudTable.remove(data[1]);\n  //   t.equal(table.getExecCalls(), 1);\n  //   // t.deepEqual(table.getDispatchCalls(), [{\n  //   //   event: 'ROW_REMOVED',\n  //   //   value: {index: 1, value: {name: 'foo', lastName: 'bar', age: 39}}\n  //   // }]);\n  //   t.deepEqual(data, [\n  //     {name: 'bob', lastName: 'leponge', age: 129},\n  //     {name: 'raymond', lastName: 'deubaze', age: 25},\n  //     {name: 'blah', lastName: 'woot', age: 69}\n  //   ]);\n  // })\n  .test('insert at start', function * (t) {\n    const data = getData();\n    const table = mockTable();\n    const crudTable = crud({data, table});\n    crudTable.insert({name: 'new', lastName: 'guy/girl', age: 22});\n    t.equal(table.getExecCalls(), 1);\n    // t.deepEqual(table.getDispatchCalls(), [{\n    //   event: 'ROW_INSERTED',\n    //   value: {index: 0, value: {name: 'new', lastName: 'guy/girl', age: 22}}\n    // }]);\n    t.deepEqual(data, [\n      {name: 'new', lastName: 'guy/girl', age: 22},\n      {name: 'bob', lastName: 'leponge', age: 129},\n      {name: 'foo', lastName: 'bar', age: 39},\n      {name: 'raymond', lastName: 'deubaze', age: 25},\n      {name: 'blah', lastName: 'woot', age: 69}\n    ]);\n  })\n  .test('insert at index', function * (t) {\n    const data = getData();\n    const table = mockTable();\n    const crudTable = crud({data, table});\n    crudTable.insert({name: 'new', lastName: 'guy/girl', age: 22}, 2);\n    t.equal(table.getExecCalls(), 1);\n    // t.deepEqual(table.getDispatchCalls(), [{\n    //   event: 'ROW_INSERTED',\n    //   value: {index: 2, value: {name: 'new', lastName: 'guy/girl', age: 22}}\n    // }]);\n    t.deepEqual(data, [\n      {name: 'bob', lastName: 'leponge', age: 129},\n      {name: 'foo', lastName: 'bar', age: 39},\n      {name: 'new', lastName: 'guy/girl', age: 22},\n      {name: 'raymond', lastName: 'deubaze', age: 25},\n      {name: 'blah', lastName: 'woot', age: 69}\n    ]);\n  })\n  .test('get from index', function * (t) {\n    const data = getData();\n    const table = mockTable();\n    const crudTable = crud({data, table});\n    const val = crudTable.get(2);\n    t.equal(table.getExecCalls(), 0);\n    // t.equal(table.getDispatchCalls().length, 0);\n    t.deepEqual(val, {name: 'raymond', lastName: 'deubaze', age: 25});\n  })\n  // .test('get from reference', function * (t) {\n  //   const data = getData();\n  //   const table = mockTable();\n  //   const crudTable = crud({data, table});\n  //   const val = crudTable.get(data[2]);\n  //   t.equal(table.getExecCalls(), 0);\n  //   // t.equal(table.getDispatchCalls().length, 0);\n  //   t.deepEqual(val, {name: 'raymond', lastName: 'deubaze', age: 25});\n  // })\n  .run();"],"names":["index","index$1","plan","zora"],"mappings":"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"}