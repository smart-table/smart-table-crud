{"version":3,"file":"smart-table-crud.js","sources":["../node_modules/smart-table-operators/index.js","../crud.js","../index.js"],"sourcesContent":["export function swap (f) {\n  return (a, b) => f(b, a);\n}\n\nexport function compose (first, ...fns) {\n  return (...args) => fns.reduce((previous, current) => current(previous), first(...args));\n}\n\nexport function curry (fn, arityLeft) {\n  const arity = arityLeft || fn.length;\n  return (...args) => {\n    if (arity === args.length) {\n      return fn(...args);\n    } else {\n      const func = (...moreArgs) => fn(...args, ...moreArgs);\n      return curry(func, arity - args.length);\n    }\n  };\n}\n\nexport function apply (fn) {\n  return (...args) => fn(...args);\n}\n\nexport function tap (fn) {\n  return arg => {\n    fn(arg);\n    return arg;\n  }\n}","import {curry} from 'smart-table-operators';\n\nexport const get = curry((array, index) => array[index]);\nexport const replace = curry((array, newVal, index) => array.map((val, i) => (index === i ) ? newVal : val));\nexport const patch = curry((array, newVal, index) => replace(array, Object.assign(array[index], newVal), index));\nexport const remove = curry((array, index) => array.filter((val, i) => index !== i));\nexport const insert = curry((array, newVal, index) => [...array.slice(0, index), newVal, ...array.slice(index)]);","import {compose} from 'smart-table-operators';\nimport {get, replace, patch, remove, insert} from './crud';\n\nexport default function ({data, table}) {\n  const mutateData = (newData) => {\n    data.splice(0, data.length);\n    data.push(...newData);\n  };\n  const refresh = compose(mutateData, table.exec);\n\n  return {\n    update(index, newVal){\n      const exec = compose(\n        replace(data, newVal),\n        refresh\n      );\n      return exec(index);\n    },\n    patch(index, newVal){\n      const exec = compose(\n        patch(data, newVal),\n        refresh);\n      return exec(index);\n    },\n    remove: compose(remove(data), refresh),\n    insert(newVal, index = 0){\n      const exec = compose(insert(data, newVal), refresh);\n      return exec(index);\n    },\n    get: get(data)\n  };\n}"],"names":[],"mappings":"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"}